
var PT_Database_Column = React.createClass({
	createLineIfNeed : function(){
		var table = tableKeyLinkDict[this.props.data.name];
		if(!table){
			return false;
		}
		var style_line = {
			stroke: 'rgb(64, 64, 64)',
			strokeWidth: '2'
		};
		var height = this.props.height / 2;
		var key = 'link_' + this.props.data.id +'_to_' + this.props.data.name
		table.notifyChanges[key] = this;
		return (<line 
			key = {key}
			x1={-3}
			y1={height}
			x2={table.state.x + table.width - this.props.tx - 3}
			y2={table.state.y - this.props.ty + height}
			style={style_line} />);
	},
	render: function(){
		var offset = this.props.height * this.props.index;
		this.offset = offset;
		var transform = 'translate(0, ' + offset + ')';

		var y_text_offset = 16, x_text_offset = 4;
		var x_type = this.props.width - measureTextWidth(this.props.data.ttype);

		var style_box = {
			width : this.props.width - 10,
			height : this.props.height - 4,
			fill: 'rgb(240, 255, 255)',
			stroke: 'rgb(64, 64, 64)',
			strokeWidth: '1'
		}

		var line = this.createLineIfNeed();
		return (<g transform={transform} >
			{line}
			<rect style={style_box} ></rect>
			<text x={x_text_offset} y={y_text_offset} >{this.props.data.name}</text>
			<text x={x_type} y={y_text_offset} >{this.props.data.ttype}</text>
		</g>);
	}
});