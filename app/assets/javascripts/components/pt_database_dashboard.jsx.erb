var panelHandleMouseMove = false, panelHandleMouseUp = false;
var tablePanel = false;
var tableBoxes = [];
var tableKeyLinkDict = {};

var PT_Database_Dashboard = React.createClass({
	getInitialState: function(){
		$(window).resize(this.onWindowSizeChange);
		$(window).keydown(this.handleKeydown);
		$(window).keyup(this.handleKeyup);
		tablePanel = this;

		return {
			hookWindowSize : false,
			width : $('#page_body').width() - 38,
			height : 600,
			loading : true,
			x: 0,
			y: 0,
			can_edit: true,
			show_db_version : false
		}
	},
	hookWindowSize : function(){
		$(window).resize(this._hookWindowSize);
		this.setState({
			hookWindowSize : true
		});
	},
	_hookWindowSize : function(){
		this.setState({
			width : $('#page_body').width() - 38
		});
	},
	loadData : function(){
		apiCall(api_load_table, {
			uuid : uuid()
		}, function(resp){
			if( ! this.state.can_edit){ 
				this.inDragMode = true;
			};

			this.setState({
				records : resp.records,
				loading: false
			});
		}, this);
	},
	updateURLHash : function(){

	},
	getTables : function(){
		return this.state.records.map(function(record){
			var key = 'tabh_k_' + record.id;
			return (<PT_Database_TableBox data={record}
				key={key}
				can_edit={this.state.can_edit}
				show_db_version={this.state.show_db_version}
				></PT_Database_TableBox>);
		}.bind(this));
	},
	handleMouseMove : function(e){
		if(panelHandleMouseMove){
			panelHandleMouseMove(e);
		}
	},
	spaceDragMove : function(e){
		var diffX = e.pageX - this.actionX;
		this.actionX = e.pageX;
		var x = this.state.x + diffX;
		var diffY = e.pageY - this.actionY;
		this.actionY = e.pageY;
		var y = this.state.y + diffY;
		this.setState({
			x: x,
			y: y
		});
	},
	handleMouseDown : function(e){
		if(this.inDragMode){
			this.actionX = e.pageX;
			this.actionY = e.pageY;
			panelHandleMouseMove = this.spaceDragMove;
		}
	},
	handleMouseUp : function(e){
		panelHandleMouseMove = false;
		if(panelHandleMouseUp){
			panelHandleMouseUp(e);
		}
		this.updateURLHash();
	},
	handleMouseOut : function(e){
		// panelHandleMouseMove = false;
	},
	handleKeydown : function(e){
		if( ! this.state.can_edit){ return; }
		var code = event.which || event.keyCode;
		if(code==32){
			$('#svg_task_panel').css('cursor', 'move');
			this.inDragMode = true;
		}
	},
	handleKeyup : function(e){
		if(!this.state.can_edit){ return; }
		this.inDragMode = false;
		$('#svg_task_panel').css('cursor', '');
	},
	render: function(){
		var panel_width = this.state.width;
		var panel_height = this.state.height;
		var styleSvg = {
			border : '1px #CCC solid',
			background : '#FFF',
			margin: '5px auto'
		}

		if(this.inDragMode){
			styleSvg.cursor = 'move';
		}

		if(!this.state.hookWindowSize){
			setTimeout(this.hookWindowSize, 200);
		}
		if(this.state.loading){
			this.loadData();
			return (<div>Loading</div>);
		}
		var contents = this.getTables();
		var transform = 'translate('+this.state.x+', ' + this.state.y + ')';
		return (<div>
			<svg width={panel_width} height={panel_height} style={styleSvg} 
				onMouseDown={this.handleMouseDown}
				onMouseMove={this.handleMouseMove}
				onMouseUp={this.handleMouseUp}
				onMouseOut={this.handleMouseOut} >
				<g transform={transform} >
					{contents}
				</g>
			</svg>
		</div>);
	}
});